import { assert } from "@jsenv/assert"
import { uninstallGitHooks } from "../../index.js"
import {
  resolveUrl,
  ensureEmptyDirectory,
  writeFile,
  readFile,
  readFileSystemNodeStat,
} from "@jsenv/util"

const tempDirectoryUrl = import.meta.resolve("./temp/")
await ensureEmptyDirectory(tempDirectoryUrl)

// hook file generated by us
{
  const preCommitHookFileUrl = resolveUrl(".git/hooks/pre-commit", tempDirectoryUrl)
  await writeFile(
    preCommitHookFileUrl,
    `#!/bin/sh
# Generated by @jsenv/git-hooks
node ./whatever.js`,
  )

  await uninstallGitHooks({
    projectDirectoryUrl: tempDirectoryUrl,
  })
  const actual = await readFileSystemNodeStat(preCommitHookFileUrl, { nullIfNotFound: true })
  const expected = null
  assert({ actual, expected })
}

// hook file not generated by us
{
  const preCommitHookFileUrl = resolveUrl(".git/hooks/pre-commit", tempDirectoryUrl)
  const hookFileContent = `#!/bin/sh`
  await writeFile(preCommitHookFileUrl, hookFileContent)

  await uninstallGitHooks({
    projectDirectoryUrl: tempDirectoryUrl,
  })
  const actual = await readFile(preCommitHookFileUrl)
  const expected = hookFileContent
  assert({ actual, expected })
  await ensureEmptyDirectory(tempDirectoryUrl)
}

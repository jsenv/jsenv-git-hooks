import {
  assertAndNormalizeDirectoryUrl,
  resolveUrl,
  readFile,
  urlToFileSystemPath,
  removeFileSystemNode,
} from "@jsenv/util"
import { createLogger } from "@jsenv/logger"
import { HOOK_NAMES, hookIsGeneratedByUs } from "./internal/hook.js"

export const uninstallGitHooks = async ({ logLevel, projectDirectoryUrl }) => {
  const logger = createLogger({ logLevel })

  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)

  await Promise.all(
    HOOK_NAMES.map(async (hookName) => {
      const hookFileUrl = resolveUrl(`.git/hooks/${hookName}`, projectDirectoryUrl)
      logger.debug(`seach file for git ${hookName} hook at ${urlToFileSystemPath(hookFileUrl)}`)
      let hookFileContent
      try {
        hookFileContent = await readFile(hookFileUrl)
      } catch (e) {
        if (e.code === "ENOENT") {
          logger.debug(`no file for git ${hookName} hook`)
          return
        }
        throw e
      }

      if (hookIsGeneratedByUs(hookFileContent)) {
        logger.info(`remove git ${hookName} hook file at ${urlToFileSystemPath(hookFileUrl)}`)
        await removeFileSystemNode(hookFileUrl)
      } else {
        logger.debug(
          `ignore git ${hookName} hook at ${urlToFileSystemPath(
            hookFileUrl,
          )} because not generated by us.`,
        )
      }
    }),
  )
}
